{"version":3,"sources":["meteor://ðŸ’»app/packages/konecty_user-presence/packages/konecty_user-presence.js"],"names":[],"mappingsfile":"/packages/konecty_user-presence.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/konecty:user-presence/common/common.js                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nUsersSessions = new Meteor.Collection('usersSessions');                                                               // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/konecty:user-presence/server/server.js                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nUsersSessions._ensureIndex({'connections.instanceId': 1}, {sparse: 1, name: 'connections.instanceId'});               // 1\nUsersSessions._ensureIndex({'connections.id': 1}, {sparse: 1, name: 'connections.id'});                               // 2\n                                                                                                                      // 3\nvar allowedStatus = ['online', 'away', 'busy', 'offline'];                                                            // 4\n                                                                                                                      // 5\nvar logEnable = false;                                                                                                // 6\n                                                                                                                      // 7\nvar log = function(msg, color) {                                                                                      // 8\n\tif (logEnable) {                                                                                                     // 9\n\t\tif (color) {                                                                                                        // 10\n\t\t\tconsole.log(msg[color]);                                                                                           // 11\n\t\t} else {                                                                                                            // 12\n\t\t\tconsole.log(msg);                                                                                                  // 13\n\t\t}                                                                                                                   // 14\n\t}                                                                                                                    // 15\n};                                                                                                                    // 16\n                                                                                                                      // 17\nvar logRed    = function() {log(Array.prototype.slice.call(arguments).join(' '), 'red');};                            // 18\nvar logGrey   = function() {log(Array.prototype.slice.call(arguments).join(' '), 'grey');};                           // 19\nvar logGreen  = function() {log(Array.prototype.slice.call(arguments).join(' '), 'green');};                          // 20\nvar logYellow = function() {log(Array.prototype.slice.call(arguments).join(' '), 'yellow');};                         // 21\n                                                                                                                      // 22\nUserPresence = {                                                                                                      // 23\n\tactiveLogs: function() {                                                                                             // 24\n\t\tlogEnable = true;                                                                                                   // 25\n\t},                                                                                                                   // 26\n                                                                                                                      // 27\n\tremoveLostConnections: function() {                                                                                  // 28\n\t\tif (Package['konecty:multiple-instances-status']) {                                                                 // 29\n\t\t\tvar ids = InstanceStatus.getCollection().find({}, {fields: {_id: 1}}).fetch();                                     // 30\n                                                                                                                      // 31\n\t\t\tids = ids.map(function(id) {                                                                                       // 32\n\t\t\t\treturn id._id;                                                                                                    // 33\n\t\t\t});                                                                                                                // 34\n                                                                                                                      // 35\n\t\t\tvar update = {                                                                                                     // 36\n\t\t\t\t$pull: {                                                                                                          // 37\n\t\t\t\t\tconnections: {                                                                                                   // 38\n\t\t\t\t\t\tinstanceId: {                                                                                                   // 39\n\t\t\t\t\t\t\t$nin: ids                                                                                                      // 40\n\t\t\t\t\t\t}                                                                                                               // 41\n\t\t\t\t\t}                                                                                                                // 42\n\t\t\t\t}                                                                                                                 // 43\n\t\t\t};                                                                                                                 // 44\n                                                                                                                      // 45\n\t\t\tUsersSessions.update({}, update, {multi: true});                                                                   // 46\n\t\t} else {                                                                                                            // 47\n\t\t\tUsersSessions.remove({});                                                                                          // 48\n\t\t}                                                                                                                   // 49\n\t},                                                                                                                   // 50\n                                                                                                                      // 51\n\tremoveConnectionsByInstanceId: function(instanceId) {                                                                // 52\n\t\tlogRed('[user-presence] removeConnectionsByInstanceId', instanceId);                                                // 53\n\t\tvar update = {                                                                                                      // 54\n\t\t\t$pull: {                                                                                                           // 55\n\t\t\t\tconnections: {                                                                                                    // 56\n\t\t\t\t\tinstanceId: instanceId                                                                                           // 57\n\t\t\t\t}                                                                                                                 // 58\n\t\t\t}                                                                                                                  // 59\n\t\t};                                                                                                                  // 60\n                                                                                                                      // 61\n\t\tUsersSessions.update({}, update, {multi: true});                                                                    // 62\n\t},                                                                                                                   // 63\n                                                                                                                      // 64\n\tremoveAllConnections: function() {                                                                                   // 65\n\t\tlogRed('[user-presence] removeAllConnections');                                                                     // 66\n\t\tUsersSessions.remove({});                                                                                           // 67\n\t},                                                                                                                   // 68\n                                                                                                                      // 69\n\tstartObserveForDeletedServers: function() {                                                                          // 70\n\t\tInstanceStatus.getCollection().find({}, {fields: {_id: 1}}).observeChanges({                                        // 71\n\t\t\tremoved: function(id) {                                                                                            // 72\n\t\t\t\tUserPresence.removeConnectionsByInstanceId(id);                                                                   // 73\n\t\t\t}                                                                                                                  // 74\n\t\t});                                                                                                                 // 75\n\t},                                                                                                                   // 76\n                                                                                                                      // 77\n\tcreateConnection: function(userId, connection, status, visitor) {                                                    // 78\n\t\tif (!userId) {                                                                                                      // 79\n\t\t\treturn;                                                                                                            // 80\n\t\t};                                                                                                                  // 81\n                                                                                                                      // 82\n\t\tconnection.UserPresenceUserId = userId;                                                                             // 83\n                                                                                                                      // 84\n\t\tstatus = status || 'online';                                                                                        // 85\n                                                                                                                      // 86\n\t\tlogGreen('[user-presence] createConnection', userId, connection.id, visitor === true ? 'visitor' : 'user');         // 87\n                                                                                                                      // 88\n\t\tvar query = {                                                                                                       // 89\n\t\t\t_id: userId                                                                                                        // 90\n\t\t};                                                                                                                  // 91\n                                                                                                                      // 92\n\t\tvar now = new Date();                                                                                               // 93\n                                                                                                                      // 94\n\t\tvar instanceId = undefined;                                                                                         // 95\n\t\tif (Package['konecty:multiple-instances-status']) {                                                                 // 96\n\t\t\tinstanceId = InstanceStatus.id();                                                                                  // 97\n\t\t};                                                                                                                  // 98\n                                                                                                                      // 99\n\t\tvar update = {                                                                                                      // 100\n\t\t\t$set: {                                                                                                            // 101\n\t\t\t\tvisitor: visitor === true                                                                                         // 102\n\t\t\t},                                                                                                                 // 103\n\t\t\t$push: {                                                                                                           // 104\n\t\t\t\tconnections: {                                                                                                    // 105\n\t\t\t\t\tid: connection.id,                                                                                               // 106\n\t\t\t\t\tinstanceId: instanceId,                                                                                          // 107\n\t\t\t\t\tstatus: status,                                                                                                  // 108\n\t\t\t\t\t_createdAt: now,                                                                                                 // 109\n\t\t\t\t\t_updatedAt: now                                                                                                  // 110\n\t\t\t\t}                                                                                                                 // 111\n\t\t\t}                                                                                                                  // 112\n\t\t};                                                                                                                  // 113\n                                                                                                                      // 114\n\t\tUsersSessions.upsert(query, update);                                                                                // 115\n\t},                                                                                                                   // 116\n                                                                                                                      // 117\n\tsetConnection: function(userId, connection, status, visitor) {                                                       // 118\n\t\tif (!userId) {                                                                                                      // 119\n\t\t\treturn;                                                                                                            // 120\n\t\t};                                                                                                                  // 121\n                                                                                                                      // 122\n\t\tlogGrey('[user-presence] setConnection', userId, connection.id, status, visitor === true ? 'visitor' : 'user');     // 123\n                                                                                                                      // 124\n\t\tvar query = {                                                                                                       // 125\n\t\t\t_id: userId,                                                                                                       // 126\n\t\t\t'connections.id': connection.id                                                                                    // 127\n\t\t};                                                                                                                  // 128\n                                                                                                                      // 129\n\t\tvar now = new Date();                                                                                               // 130\n                                                                                                                      // 131\n\t\tvar update = {                                                                                                      // 132\n\t\t\t$set: {                                                                                                            // 133\n\t\t\t\t'connections.$.status': status,                                                                                   // 134\n\t\t\t\t'connections.$._updatedAt': now                                                                                   // 135\n\t\t\t}                                                                                                                  // 136\n\t\t};                                                                                                                  // 137\n                                                                                                                      // 138\n\t\tvar count = UsersSessions.update(query, update);                                                                    // 139\n                                                                                                                      // 140\n\t\tif (count === 0) {                                                                                                  // 141\n\t\t\tUserPresence.createConnection(userId, connection, status, visitor);                                                // 142\n\t\t};                                                                                                                  // 143\n                                                                                                                      // 144\n\t\tif (visitor !== true) {                                                                                             // 145\n\t\t\tif (status === 'online') {                                                                                         // 146\n\t\t\t\tMeteor.users.update({_id: userId, statusDefault: 'online', status: {$ne: 'online'}}, {$set: {status: 'online'}}); // 147\n\t\t\t} else if (status === 'away') {                                                                                    // 148\n\t\t\t\tMeteor.users.update({_id: userId, statusDefault: 'online', status: {$ne: 'away'}}, {$set: {status: 'away'}});     // 149\n\t\t\t}                                                                                                                  // 150\n\t\t}                                                                                                                   // 151\n\t},                                                                                                                   // 152\n                                                                                                                      // 153\n\tsetDefaultStatus: function(userId, status) {                                                                         // 154\n\t\tif (!userId) {                                                                                                      // 155\n\t\t\treturn;                                                                                                            // 156\n\t\t};                                                                                                                  // 157\n                                                                                                                      // 158\n\t\tif (allowedStatus.indexOf(status) === -1) {                                                                         // 159\n\t\t\treturn;                                                                                                            // 160\n\t\t};                                                                                                                  // 161\n                                                                                                                      // 162\n\t\tlogYellow('[user-presence] setDefaultStatus', userId, status);                                                      // 163\n                                                                                                                      // 164\n\t\tMeteor.users.update({_id: userId, statusDefault: {$ne: status}}, {$set: {status: status, statusDefault: status}});  // 165\n\t},                                                                                                                   // 166\n                                                                                                                      // 167\n\tremoveConnection: function(connectionId) {                                                                           // 168\n\t\tlogRed('[user-presence] removeConnection', connectionId);                                                           // 169\n                                                                                                                      // 170\n\t\tvar query = {                                                                                                       // 171\n\t\t\t'connections.id': connectionId                                                                                     // 172\n\t\t};                                                                                                                  // 173\n                                                                                                                      // 174\n\t\tvar update = {                                                                                                      // 175\n\t\t\t$pull: {                                                                                                           // 176\n\t\t\t\tconnections: {                                                                                                    // 177\n\t\t\t\t\tid: connectionId                                                                                                 // 178\n\t\t\t\t}                                                                                                                 // 179\n\t\t\t}                                                                                                                  // 180\n\t\t};                                                                                                                  // 181\n                                                                                                                      // 182\n\t\tUsersSessions.update(query, update);                                                                                // 183\n\t},                                                                                                                   // 184\n                                                                                                                      // 185\n\tstart: function() {                                                                                                  // 186\n\t\tMeteor.onConnection(function(connection) {                                                                          // 187\n\t\t\tconnection.onClose(function() {                                                                                    // 188\n\t\t\t\tif (connection.UserPresenceUserId != undefined) {                                                                 // 189\n\t\t\t\t\tUserPresence.removeConnection(connection.id);                                                                    // 190\n\t\t\t\t}                                                                                                                 // 191\n\t\t\t});                                                                                                                // 192\n\t\t});                                                                                                                 // 193\n                                                                                                                      // 194\n\t\tprocess.on('exit', function() {                                                                                     // 195\n\t\t\tif (Package['konecty:multiple-instances-status']) {                                                                // 196\n\t\t\t\tUserPresence.removeConnectionsByInstanceId(InstanceStatus.id());                                                  // 197\n\t\t\t} else {                                                                                                           // 198\n\t\t\t\tUserPresence.removeAllConnections();                                                                              // 199\n\t\t\t}                                                                                                                  // 200\n\t\t});                                                                                                                 // 201\n                                                                                                                      // 202\n\t\tif (Package['accounts-base']) {                                                                                     // 203\n\t\t\tAccounts.onLogin(function(login) {                                                                                 // 204\n\t\t\t\tUserPresence.createConnection(login.user._id, login.connection);                                                  // 205\n\t\t\t});                                                                                                                // 206\n\t\t};                                                                                                                  // 207\n                                                                                                                      // 208\n\t\tMeteor.publish(null, function() {                                                                                   // 209\n\t\t\tif (this.userId == null && this.connection.UserPresenceUserId != undefined) {                                      // 210\n\t\t\t\tUserPresence.removeConnection(this.connection.id);                                                                // 211\n\t\t\t\tdelete this.connection.UserPresenceUserId;                                                                        // 212\n\t\t\t}                                                                                                                  // 213\n                                                                                                                      // 214\n\t\t\tthis.ready();                                                                                                      // 215\n\t\t});                                                                                                                 // 216\n                                                                                                                      // 217\n\t\tif (Package['konecty:multiple-instances-status']) {                                                                 // 218\n\t\t\tUserPresence.startObserveForDeletedServers();                                                                      // 219\n\t\t}                                                                                                                   // 220\n                                                                                                                      // 221\n\t\tUserPresence.removeLostConnections();                                                                               // 222\n                                                                                                                      // 223\n\t\tMeteor.methods({                                                                                                    // 224\n\t\t\t'UserPresence:connect': function() {                                                                               // 225\n\t\t\t\tthis.unblock();                                                                                                   // 226\n\t\t\t\tUserPresence.createConnection(this.userId, this.connection);                                                      // 227\n\t\t\t},                                                                                                                 // 228\n                                                                                                                      // 229\n\t\t\t'UserPresence:away': function() {                                                                                  // 230\n\t\t\t\tthis.unblock();                                                                                                   // 231\n\t\t\t\tUserPresence.setConnection(this.userId, this.connection, 'away');                                                 // 232\n\t\t\t},                                                                                                                 // 233\n                                                                                                                      // 234\n\t\t\t'UserPresence:online': function() {                                                                                // 235\n\t\t\t\tthis.unblock();                                                                                                   // 236\n\t\t\t\tUserPresence.setConnection(this.userId, this.connection, 'online');                                               // 237\n\t\t\t},                                                                                                                 // 238\n                                                                                                                      // 239\n\t\t\t'UserPresence:setDefaultStatus': function(status) {                                                                // 240\n\t\t\t\tthis.unblock();                                                                                                   // 241\n\t\t\t\tUserPresence.setDefaultStatus(this.userId, status);                                                               // 242\n\t\t\t},                                                                                                                 // 243\n                                                                                                                      // 244\n\t\t\t'UserPresence:visitor:connect': function(id) {                                                                     // 245\n\t\t\t\tthis.unblock();                                                                                                   // 246\n\t\t\t\tUserPresence.createConnection(id, this.connection, 'online', true);                                               // 247\n\t\t\t}                                                                                                                  // 248\n\t\t});                                                                                                                 // 249\n\t}                                                                                                                    // 250\n}                                                                                                                     // 251\n                                                                                                                      // 252\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/konecty:user-presence/server/monitor.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nUserPresenceMonitor = {                                                                                               // 1\n\tonSetUserStatus: function() {},                                                                                      // 2\n                                                                                                                      // 3\n\tstart: function() {                                                                                                  // 4\n\t\tUsersSessions.find({}).observe({                                                                                    // 5\n\t\t\tadded: function(record) {                                                                                          // 6\n\t\t\t\tUserPresenceMonitor.processUserSession(record, 'added');                                                          // 7\n\t\t\t},                                                                                                                 // 8\n\t\t\tchanged: function(record) {                                                                                        // 9\n\t\t\t\tUserPresenceMonitor.processUserSession(record, 'changed');                                                        // 10\n\t\t\t},                                                                                                                 // 11\n\t\t\tremoved: function(record) {                                                                                        // 12\n\t\t\t\tUserPresenceMonitor.processUserSession(record, 'removed');                                                        // 13\n\t\t\t}                                                                                                                  // 14\n\t\t});                                                                                                                 // 15\n                                                                                                                      // 16\n\t\tMeteor.users.find({}).observeChanges({                                                                              // 17\n\t\t\tchanged: UserPresenceMonitor.processUser                                                                           // 18\n\t\t});                                                                                                                 // 19\n\t},                                                                                                                   // 20\n                                                                                                                      // 21\n\tprocessUserSession: function(record, action) {                                                                       // 22\n\t\tif (action === 'removed' && (record.connections == null || record.connections.length === 0)) {                      // 23\n\t\t\treturn;                                                                                                            // 24\n\t\t};                                                                                                                  // 25\n                                                                                                                      // 26\n\t\tif (record.connections == null || record.connections.length === 0 || action === 'removed') {                        // 27\n\t\t\tif (record.visitor === true) {                                                                                     // 28\n\t\t\t\tUserPresenceMonitor.setVisitorStatus(record._id, 'offline');                                                      // 29\n\t\t\t} else {                                                                                                           // 30\n\t\t\t\tUserPresenceMonitor.setUserStatus(record._id, 'offline');                                                         // 31\n\t\t\t}                                                                                                                  // 32\n                                                                                                                      // 33\n\t\t\tif (action !== 'removed') {                                                                                        // 34\n\t\t\t\tUsersSessions.remove({_id: record._id, 'connections.0': {$exists: false} });                                      // 35\n\t\t\t};                                                                                                                 // 36\n\t\t\treturn;                                                                                                            // 37\n\t\t};                                                                                                                  // 38\n                                                                                                                      // 39\n\t\tvar connectionStatus = 'offline';                                                                                   // 40\n\t\trecord.connections.forEach(function(connection) {                                                                   // 41\n\t\t\tif (connection.status === 'online') {                                                                              // 42\n\t\t\t\tconnectionStatus = 'online';                                                                                      // 43\n\t\t\t} else if (connection.status === 'away' && connectionStatus === 'offline') {                                       // 44\n\t\t\t\tconnectionStatus = 'away';                                                                                        // 45\n\t\t\t};                                                                                                                 // 46\n\t\t});                                                                                                                 // 47\n                                                                                                                      // 48\n\t\tif (record.visitor === true) {                                                                                      // 49\n\t\t\tUserPresenceMonitor.setVisitorStatus(record._id, connectionStatus);                                                // 50\n\t\t} else {                                                                                                            // 51\n\t\t\tUserPresenceMonitor.setUserStatus(record._id, connectionStatus);                                                   // 52\n\t\t};                                                                                                                  // 53\n\t},                                                                                                                   // 54\n                                                                                                                      // 55\n\tprocessUser: function(id, fields) {                                                                                  // 56\n\t\tif (fields.statusDefault == null) {                                                                                 // 57\n\t\t\treturn;                                                                                                            // 58\n\t\t};                                                                                                                  // 59\n                                                                                                                      // 60\n\t\tvar userSession = UsersSessions.findOne({_id: id});                                                                 // 61\n                                                                                                                      // 62\n\t\tif (userSession) {                                                                                                  // 63\n\t\t\tUserPresenceMonitor.processUserSession(userSession, 'changed');                                                    // 64\n\t\t};                                                                                                                  // 65\n\t},                                                                                                                   // 66\n                                                                                                                      // 67\n\tsetUserStatus: function(userId, status) {                                                                            // 68\n\t\tvar user = Meteor.users.findOne(userId),                                                                            // 69\n\t\t\tstatusConnection = status;                                                                                         // 70\n                                                                                                                      // 71\n\t\tif (!user) {                                                                                                        // 72\n\t\t\treturn;                                                                                                            // 73\n\t\t};                                                                                                                  // 74\n                                                                                                                      // 75\n\t\tif (user.statusDefault != null && status !== 'offline' && user.statusDefault !== 'online') {                        // 76\n\t\t\tstatus = user.statusDefault;                                                                                       // 77\n\t\t};                                                                                                                  // 78\n                                                                                                                      // 79\n\t\tvar query = {                                                                                                       // 80\n\t\t\t_id: userId,                                                                                                       // 81\n\t\t\t$or: [                                                                                                             // 82\n\t\t\t\t{status: {$ne: status}},                                                                                          // 83\n\t\t\t\t{statusConnection: {$ne: statusConnection}}                                                                       // 84\n\t\t\t]                                                                                                                  // 85\n\t\t};                                                                                                                  // 86\n                                                                                                                      // 87\n\t\tvar update = {                                                                                                      // 88\n\t\t\t$set: {                                                                                                            // 89\n\t\t\t\tstatus: status,                                                                                                   // 90\n\t\t\t\tstatusConnection: statusConnection                                                                                // 91\n\t\t\t}                                                                                                                  // 92\n\t\t};                                                                                                                  // 93\n                                                                                                                      // 94\n\t\tMeteor.users.update(query, update);                                                                                 // 95\n                                                                                                                      // 96\n\t\tUserPresenceMonitor.onSetUserStatus(user, status, statusConnection);                                                // 97\n\t},                                                                                                                   // 98\n                                                                                                                      // 99\n\tsetVisitorStatus: function(id, status) {}                                                                            // 100\n}                                                                                                                     // 101\n                                                                                                                      // 102\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}