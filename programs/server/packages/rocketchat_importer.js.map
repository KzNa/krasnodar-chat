{"version":3,"sources":["meteor://💻app/packages/rocketchat_importer/lib/_importer.coffee","meteor://💻app/packages/rocketchat_importer/lib/importTool.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterBase.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterProgress.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterProgressStep.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterSelection.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterSelectionChannel.coffee","meteor://💻app/packages/rocketchat_importer/server/classes/ImporterSelectionUser.coffee","meteor://💻app/packages/rocketchat_importer/server/models/Imports.coffee","meteor://💻app/packages/rocketchat_importer/server/models/RawImports.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/getImportProgress.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/getSelectionData.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/prepareImport.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/restartImport.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/setupImporter.coffee","meteor://💻app/packages/rocketchat_importer/server/methods/startImport.coffee","meteor://💻app/packages/rocketchat_importer/server/startup/setImportsToInvalid.coffee","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/de.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/en.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/fr.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/ja.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/ro.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/ru.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/sv.i18n.json","meteor://💻app/packages/rocketchat_importer/packages/rocketchat_importeri18n/zh.i18n.json"],"names":[],"mappings":"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AAQ,CAAC,OAAO,CAAC,IAAjB,CAAsB;AAAA,IAAE,OAAO;AAAA,MAAE,KAAK,IAAP;KAAT;GAAtB,CAA8C,CAAC,OAA/C,CAAuD,SAAC,IAAD;WACtD,QAAQ,CAAC,UAAU,CAAC,MAApB,CAA2B;AAAA,MAAE,UAAU,IAAI,CAAC,GAAjB;AAAA,MAAsB,YAAY,IAAI,CAAC,IAAvC;KAA3B,EADsD;EAAA,CAAvD,EANc;AAAA,CAAf;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2H","file":"/packages/rocketchat_importer.js","sourcesContent":["Importer = {}\n","Importer.Importers = {}\n\nImporter.AddImporter = (name, importer, options) ->\n\tif not Importer.Importers[name]?\n\t\tImporter.Importers[name] =\n\t\t\tname: options.name\n\t\t\timporter: importer\n\t\t\tfileTypeRegex: options.fileTypeRegex\n\t\t\tdescription: options.description\n","# Base class for all Importers.\n#\n# @example How to subclass an importer\n# \tclass ExampleImporter extends RocketChat.importTool._baseImporter\n#\t\tconstructor: ->\n#\t\t\tsuper('Name of Importer', 'Description of the importer, use i18n string.', new RegExp('application\\/.*?zip'))\n#\t\tprepare: (uploadedFileData, uploadedFileContentType, uploadedFileName) =>\n#\t\t\tsuper\n#\t\tstartImport: (selectedUsersAndChannels) =>\n#\t\t\tsuper\n#\t\tgetProgress: =>\n#\t\t\t#return the progress report, tbd what is expected\n# @version 1.0.0\nImporter.Base = class Importer.Base\n\t@MaxBSONSize = 8000000\n\t@http = Npm.require 'http'\n\t@https = Npm.require 'https'\n\n\t@getBSONSize: (object) ->\n\t\t# The max BSON object size we can store in MongoDB is 16777216 bytes\n\t\t# but for some reason the mongo instanace which comes with meteor\n\t\t# errors out for anything close to that size. So, we are rounding it\n\t\t# down to 8000000 bytes.\n\t\tMongoInternals.NpmModules.mongodb.module.BSON.calculateObjectSize object\n\n\t@getBSONSafeArraysFromAnArray: (theArray) ->\n\t\tBSONSize = Importer.Base.getBSONSize theArray\n\t\tmaxSize = Math.floor(theArray.length / (Math.ceil(BSONSize / Importer.Base.MaxBSONSize)))\n\t\tsafeArrays = []\n\t\ti = 0\n\t\twhile i < theArray.length\n\t\t\tsafeArrays.push(theArray.slice(i, i += maxSize))\n\t\treturn safeArrays\n\n\t# Constructs a new importer, adding an empty collection, AdmZip property, and empty users & channels\n\t#\n\t# @param [String] name the name of the Importer\n\t# @param [String] description the i18n string which describes the importer\n\t# @param [RegExp] fileTypeRegex the regexp to validate the uploaded file type against\n\t#\n\tconstructor: (@name, @description, @fileTypeRegex) ->\n\t\t@progress = new Importer.Progress @name\n\t\t@collection = Importer.RawImports\n\t\t@AdmZip = Npm.require 'adm-zip'\n\t\timportId = Importer.Imports.insert { 'type': @name, 'ts': Date.now(), 'status': @progress.step, 'valid': true, 'user': Meteor.user()._id }\n\t\t@importRecord = Importer.Imports.findOne importId\n\t\t@users = {}\n\t\t@channels = {}\n\t\t@messages = {}\n\n\t# Takes the uploaded file and extracts the users, channels, and messages from it.\n\t#\n\t# @param [String] dataURI a base64 string of the uploaded file\n\t# @param [String] sentContentType the file type\n\t# @param [String] fileName the name of the uploaded file\n\t#\n\t# @return [Importer.Selection] Contains two properties which are arrays of objects, `channels` and `users`.\n\t#\n\tprepare: (dataURI, sentContentType, fileName) =>\n\t\tif not @fileTypeRegex.test sentContentType\n\t\t\tthrow new Error \"Invalid file uploaded to import #{@name} data from.\" #TODO: Make translatable\n\n\t\t@updateProgress Importer.ProgressStep.PREPARING_STARTED\n\t\t@updateRecord { 'file': fileName }\n\n\t# Starts the import process. The implementing method should defer as soon as the selection is set, so the user who started the process\n\t# doesn't end up with a \"locked\" ui while meteor waits for a response. The returned object should be the progress.\n\t#\n\t# @param [Importer.Selection] selectedUsersAndChannels an object with `channels` and `users` which contains information about which users and channels to import\n\t#\n\t# @return [Importer.Progress] the progress of the import\n\t#\n\tstartImport: (importSelection) =>\n\t\tif importSelection is undefined\n\t\t\tthrow new Error \"No selected users and channel data provided to the #{@name} importer.\" #TODO: Make translatable\n\t\telse if importSelection.users is undefined\n\t\t\tthrow new Error \"Users in the selected data wasn't found, it must but at least an empty array for the #{@name} importer.\" #TODO: Make translatable\n\t\telse if importSelection.channels is undefined\n\t\t\tthrow new Error \"Channels in the selected data wasn't found, it must but at least an empty array for the #{@name} importer.\" #TODO: Make translatable\n\n\t\t@updateProgress Importer.ProgressStep.IMPORTING_STARTED\n\n\t# Gets the Importer.Selection object for the import.\n\t#\n\t# @return [Importer.Selection] the users and channels selection\n\tgetSelection: () =>\n\t\tthrow new Error \"Invalid 'getSelection' called on #{@name}, it must be overridden and super can not be called.\"\n\n\t# Gets the progress of this importer.\n\t#\n\t# @return [Importer.Progress] the progress of the import\n\t#\n\tgetProgress: =>\n\t\treturn @progress\n\n\t# Updates the progress step of this importer.\n\t#\n\t# @return [Importer.Progress] the progress of the import\n\t#\n\tupdateProgress: (step) =>\n\t\t@progress.step = step\n\n\t\tconsole.log \"#{@name} is now at #{step}.\"\n\t\t@updateRecord { 'status': @progress.step }\n\n\t\treturn @progress\n\n\t# Adds the passed in value to the total amount of items needed to complete.\n\t#\n\t# @return [Importer.Progress] the progress of the import\n\t#\n\taddCountToTotal: (count) =>\n\t\t@progress.count.total = @progress.count.total + count\n\t\t@updateRecord { 'count.total': @progress.count.total }\n\n\t\treturn @progress\n\n\t# Adds the passed in value to the total amount of items completed.\n\t#\n\t# @return [Importer.Progress] the progress of the import\n\t#\n\taddCountCompleted: (count) =>\n\t\t@progress.count.completed = @progress.count.completed + count\n\n\t\t#Only update the database every 500 records\n\t\t#Or the completed is greater than or equal to the total amount\n\t\tif (@progress.count.completed % 500 == 0) or @progress.count.completed >= @progress.count.total\n\t\t\t@updateRecord { 'count.completed': @progress.count.completed }\n\n\t\treturn @progress\n\n\t# Updates the import record with the given fields being `set`\n\t#\n\t# @return [Importer.Imports] the import record object\n\t#\n\tupdateRecord: (fields) =>\n\t\tImporter.Imports.update { _id: @importRecord._id }, { $set: fields }\n\t\t@importRecord = Importer.Imports.findOne @importRecord._id\n\n\t\treturn @importRecord\n\n\t# Uploads the file to the storage.\n\t#\n\t# @param [Object] details an object with details about the upload. name, size, type, and rid\n\t# @param [String] fileUrl url of the file to download/import\n\t# @param [Object] user the Rocket.Chat user\n\t# @param [Object] room the Rocket.Chat room\n\t# @param [Date] timeStamp the timestamp the file was uploaded\n\t#\n\tuploadFile: (details, fileUrl, user, room, timeStamp) =>\n\t\tconsole.log \"Uploading the file #{details.name} from #{fileUrl}.\"\n\t\trequestModule = if /https/i.test(fileUrl) then Importer.Base.https else Importer.Base.http\n\n\t\trequestModule.get fileUrl, Meteor.bindEnvironment((stream) ->\n\t\t\tfileId = Meteor.fileStore.create details\n\t\t\tif fileId\n\t\t\t\tMeteor.fileStore.write stream, fileId, (err, file) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tthrow new Error(err)\n\t\t\t\t\telse\n\t\t\t\t\t\turl = file.url.replace(Meteor.absoluteUrl(), '/')\n\n\t\t\t\t\t\tattachment =\n\t\t\t\t\t\t\ttitle: \"File Uploaded: #{file.name}\"\n\t\t\t\t\t\t\ttitle_link: url\n\n\t\t\t\t\t\tif /^image\\/.+/.test file.type\n\t\t\t\t\t\t\tattachment.image_url = url\n\t\t\t\t\t\t\tattachment.image_type = file.type\n\t\t\t\t\t\t\tattachment.image_size = file.size\n\t\t\t\t\t\t\tattachment.image_dimensions = file.identify?.size\n\n\t\t\t\t\t\tif /^audio\\/.+/.test file.type\n\t\t\t\t\t\t\tattachment.audio_url = url\n\t\t\t\t\t\t\tattachment.audio_type = file.type\n\t\t\t\t\t\t\tattachment.audio_size = file.size\n\n\t\t\t\t\t\tif /^video\\/.+/.test file.type\n\t\t\t\t\t\t\tattachment.video_url = url\n\t\t\t\t\t\t\tattachment.video_type = file.type\n\t\t\t\t\t\t\tattachment.video_size = file.size\n\n\t\t\t\t\t\tmsg =\n\t\t\t\t\t\t\trid: details.rid\n\t\t\t\t\t\t\tts: timeStamp\n\t\t\t\t\t\t\tmsg: ''\n\t\t\t\t\t\t\tfile:\n\t\t\t\t\t\t\t\t_id: file._id\n\t\t\t\t\t\t\tgroupable: false\n\t\t\t\t\t\t\tattachments: [attachment]\n\n\t\t\t\t\t\tRocketChat.sendMessage user, msg, room\n\t\t\telse\n\t\t\t\tconsole.error \"Failed to create the store for #{fileUrl}!!!\"\n\t\t)\n","# Class for all the progress of the importers to use.\nImporter.Progress = class Importer.Progress\n\t# Constructs a new progress object.\n\t#\n\t# @param [String] name the name of the Importer\n\t#\n\tconstructor: (@name) ->\n\t\t@step = Importer.ProgressStep.NEW\n\t\t@count = { completed: 0, total: 0 }\n","# \"ENUM\" of the import step, the value is the translation string\nImporter.ProgressStep = Object.freeze\n\tNEW: 'importer_new'\n\tPREPARING_STARTED: 'importer_preparing_started'\n\tPREPARING_USERS: 'importer_preparing_users'\n\tPREPARING_CHANNELS: 'importer_preparing_channels'\n\tPREPARING_MESSAGES: 'importer_preparing_messages'\n\tUSER_SELECTION: 'importer_user_selection'\n\tIMPORTING_STARTED: 'importer_importing_started'\n\tIMPORTING_USERS: 'importer_importing_users'\n\tIMPORTING_CHANNELS: 'importer_importing_channels'\n\tIMPORTING_MESSAGES: 'importer_importing_messages'\n\tFINISHING: 'importer_finishing'\n\tDONE: 'importer_done'\n\tERROR: 'importer_import_failed'\n\tCANCELLED: 'importer_import_cancelled'\n","# Class for all the selection of users and channels for the importers\nImporter.Selection = class Importer.Selection\n\t# Constructs a new importer selection object.\n\t#\n\t# @param [String] name the name of the Importer\n\t# @param [Array<Importer.User>] users the array of users\n\t# @param [Array<Importer.Channel>] channels the array of channels\n\t#\n\tconstructor: (@name, @users, @channels) ->\n","#  Class for the selection channels for ImporterSelection\nImporter.SelectionChannel = class Importer.SelectionChannel\n\t# Constructs a new selection channel.\n\t#\n\t# @param [String] channel_id the unique identifier of the channel\n\t# @param [String] name the name of the channel\n\t# @param [Boolean] is_archived whether the channel was archived or not\n\t# @param [Boolean] do_import whether we will be importing the channel or not\n\t#\n\tconstructor: (@channel_id, @name, @is_archived, @do_import) ->\n\t\t#TODO: Add some verification?\n","# Class for the selection users for ImporterSelection\nImporter.SelectionUser = class Importer.SelectionUser\n\t# Constructs a new selection user.\n\t#\n\t# @param [String] user_id the unique user identifier\n\t# @param [String] username the user's username\n\t# @param [String] email the user's email\n\t# @param [Boolean] is_deleted whether the user was deleted or not\n\t# @param [Boolean] is_bot whether the user is a bot or not\n\t# @param [Boolean] do_import whether we are going to import this user or not\n\t#\n\tconstructor: (@user_id, @username, @email, @is_deleted, @is_bot, @do_import) ->\n\t\t#TODO: Add some verification?\n","Importer.Imports = new class Importer.Imports extends RocketChat.models._Base\n\tconstructor: ->\n\t\t@_initModel 'import'\n","Importer.RawImports = new class Importer.RawImports extends RocketChat.models._Base\n\tconstructor: ->\n\t\t@_initModel 'raw_imports'\n","Meteor.methods\n\tgetImportProgress: (name) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?\n\t\t\treturn Importer.Importers[name].importerInstance?.getProgress()\n\t\telse\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.methods\n\tgetSelectionData: (name) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?.importerInstance?\n\t\t\tprogress = Importer.Importers[name].importerInstance.getProgress()\n\t\t\tswitch progress.step\n\t\t\t\twhen Importer.ProgressStep.USER_SELECTION\n\t\t\t\t\treturn Importer.Importers[name].importerInstance.getSelection()\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\telse\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.methods\n\tprepareImport: (name, dataURI, contentType, fileName) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?.importerInstance?\n\t\t\tImporter.Importers[name].importerInstance.prepare dataURI, contentType, fileName\n\t\telse\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.methods\n\trestartImport: (name) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?\n\t\t\timporter = Importer.Importers[name]\n\t\t\timporter.importerInstance.updateProgress Importer.ProgressStep.CANCELLED\n\t\t\timporter.importerInstance.updateRecord { valid: false }\n\t\t\timporter.importerInstance = undefined\n\t\t\timporter.importerInstance = new importer.importer importer.name, importer.description, importer.fileTypeRegex\n\t\t\treturn importer.importerInstance.getProgress()\n\t\telse\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.methods\n\tsetupImporter: (name) ->\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?.importer?\n\t\t\timporter = Importer.Importers[name]\n\t\t\t# If they currently have progress, get it and return the progress.\n\t\t\tif importer.importerInstance\n\t\t\t\treturn importer.importerInstance.getProgress()\n\t\t\telse\n\t\t\t\timporter.importerInstance = new importer.importer importer.name, importer.description, importer.fileTypeRegex\n\t\t\t\treturn importer.importerInstance.getProgress()\n\t\telse\n\t\t\tconsole.warn \"Tried to setup #{name} as an importer.\"\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.methods\n\tstartImport: (name, input) ->\n\t\t# Takes name and object with users / channels selected to import\n\t\tif not Meteor.userId()\n\t\t\tthrow new Meteor.Error 203, 'User_logged_out' #TODO: Update this to the new way of doing things\n\n\t\tif Importer.Importers[name]?.importerInstance?\n\t\t\tusersSelection = input.users.map (user) ->\n\t\t\t\treturn new Importer.SelectionUser user.user_id, user.username, user.email, user.is_deleted, user.is_bot, user.do_import\n\t\t\tchannelsSelection = input.channels.map (channel) ->\n\t\t\t\treturn new Importer.SelectionChannel channel.channel_id, channel.name, channel.is_archived, channel.do_import\n\n\t\t\tselection = new Importer.Selection name, usersSelection, channelsSelection\n\t\t\tImporter.Importers[name].importerInstance.startImport selection\n\t\telse\n\t\t\tthrow new Meteor.Error 'importer-not-defined', 'importer_not_defined_properly', { importerName: name }\n","Meteor.startup ->\n\t# Make sure all imports are marked as invalid, data clean up since you can't\n\t# restart an import at the moment.\n\tImporter.Imports.update {}, { $set: { valid: false } }, { multi: true }\n\n\t# Clean up all the raw import data, since you can't restart an import at the moment\n\tImporter.Imports.find({ valid: { $ne: true }}).forEach (item) ->\n\t\tImporter.RawImports.remove { 'import': item._id, 'importer': item.type }\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"de\"] = [\"German\",\"Deutsch\"];\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"Importer_Archived\":\"archiviert\",\"Importer_done\":\"Die Daten wurden erfolgreich importiert!\",\"Importer_finishing\":\"Import abgeschlossen.\",\"Importer_From_Description\":\"Importiert Daten von __from__ nach Rocket.Chat.\",\"Importer_import_cancelled\":\"Der Import wurde abgebrochen.\",\"Importer_import_failed\":\"Während des Importierens ist ein Fehler aufgetreten.\",\"Importer_importing_channels\":\"Importiere die Kanäle.\",\"Importer_importing_messages\":\"Importiere die Nachrichten.\",\"Importer_importing_started\":\"Starte den Importer.\",\"Importer_importing_users\":\"Importiere die Benutzer.\",\"Importer_not_defined_properly\":\"Der Importer wurde nicht richtig definiert, eine Importklasse fehlt.\",\"Importer_not_in_progress\":\"Der Importer läuft derzeit nicht.\",\"Importer_Prepare_Restart_Import\":\"Import neu starten\",\"Importer_Prepare_Start_Import\":\"Import starten\",\"Importer_Prepare_Uncheck_Archived_Channels\":\"Markierung für archivierte Kanäle entfernen\",\"Importer_Prepare_Uncheck_Deleted_Users\":\"Gelöschte Nutzer deaktivieren\",\"Importer_progress_error\":\"Fehler beim Erhalt des Verlaufs des Imports.\",\"Importer_setup_error\":\"Bei der Konfiguration des Importers ist ein Fehler aufgetreten.\",\"Invalid_Export_File\":\"Die angegebene Datei ist keine gültige %s Exportdatei.\",\"Invalid_Import_File_Type\":\"Ungültiges Dateiformat zum Importieren.\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"Importer_Archived\":\"Archived\",\"Importer_done\":\"Importing complete!\",\"Importer_finishing\":\"Finishing up the import.\",\"Importer_From_Description\":\"Imports __from__'s data into Rocket.Chat.\",\"Importer_import_cancelled\":\"Import cancelled.\",\"Importer_import_failed\":\"An error occured while running the import.\",\"Importer_importing_channels\":\"Importing the channels.\",\"Importer_importing_messages\":\"Importing the messages.\",\"Importer_importing_started\":\"Starting the import.\",\"Importer_importing_users\":\"Importing the users.\",\"Importer_not_defined_properly\":\"The importer was not defined correctly, it is missing the Import class.\",\"Importer_not_in_progress\":\"The importer is currently not running.\",\"Importer_Prepare_Restart_Import\":\"Restart Import\",\"Importer_Prepare_Start_Import\":\"Start Importing\",\"Importer_Prepare_Uncheck_Archived_Channels\":\"Uncheck Archived Channels\",\"Importer_Prepare_Uncheck_Deleted_Users\":\"Uncheck Deleted Users\",\"Importer_progress_error\":\"Failed to get the progress for the import.\",\"Importer_setup_error\":\"An error occured while setting up the importer.\",\"Invalid_Export_File\":\"The file uploaded isn't a valid %s export file.\",\"Invalid_Import_File_Type\":\"Invalid Import file type.\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Français\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"Importer_Archived\":\"Archivé\",\"Importer_done\":\"Importation réussie !\",\"Importer_finishing\":\"Finalisation de l'import\",\"Importer_From_Description\":\"Importer les données de __from__ dans Rocket.Chat.\",\"Importer_import_cancelled\":\"Importation annulé\",\"Importer_import_failed\":\"Un erreur est survenue pendant l'importation.\",\"Importer_importing_channels\":\"Importation des canaux.\",\"Importer_importing_messages\":\"Importation des messages.\",\"Importer_importing_started\":\"Début de l'importation.\",\"Importer_importing_users\":\"Importation des utilisateurs.\",\"Importer_not_defined_properly\":\"L'importateur n'a pas été défini correctement, il manque la classe Import.\",\"Importer_not_in_progress\":\"L'importateur n'est pas en cours d'exécution.\",\"Importer_Prepare_Restart_Import\":\"Recommencer l’Importation\",\"Importer_Prepare_Start_Import\":\"Commencer l'Importation\",\"Importer_Prepare_Uncheck_Archived_Channels\":\"Désélectionner les Canaux Archivés\",\"Importer_Prepare_Uncheck_Deleted_Users\":\"Désélectionner les Utilisateurs Supprimés\",\"Importer_progress_error\":\"Impossible d'obtenir l'état de l'importation.\",\"Importer_setup_error\":\"Une erreur est survenue lors du paramétrage de l'importateur.\",\"Invalid_Export_File\":\"Le fichier transmis n'est pas un fichier d'exportation valide de %s\",\"Invalid_Import_File_Type\":\"Format du fichier d'importation invalide.\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ja\"] = [\"Japanese\",\"日本語\"];\nif(_.isUndefined(TAPi18n.translations[\"ja\"])) {\n  TAPi18n.translations[\"ja\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ja\"][namespace])) {\n  TAPi18n.translations[\"ja\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ja\"][namespace], {\"Importer_done\":\"インポートが完了しました!\",\"Importer_From_Description\":\"__from__ のデータを Rocket.Chat へインポート\",\"Importer_import_cancelled\":\"インポートをキャンセルしました。\",\"Importer_import_failed\":\"インポート中にエラーが発生しました。\",\"Importer_Prepare_Restart_Import\":\"インポートを再実行する\",\"Importer_Prepare_Start_Import\":\"インポートを開始\",\"Importer_progress_error\":\"インポートの進行状況を取得するのに失敗しました。\"});\nTAPi18n._registerServerTranslator(\"ja\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ro\"] = [\"Romanian\",\"Română\"];\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"Importer_Archived\":\"Arhivat\",\"Importer_done\":\"Import complet!\",\"Importer_finishing\":\"Se finalizează import.\",\"Importer_import_cancelled\":\"Import anulat.\",\"Importer_import_failed\":\"A Apărut o eroare în timpul importului.\",\"Importer_importing_messages\":\"Se imoprtă mesajele.\",\"Importer_Prepare_Restart_Import\":\"Reîncepe import\",\"Importer_Prepare_Start_Import\":\"Începe import\",\"Invalid_Export_File\":\"Fișierul încărcat nu este un fișier valid de export.\",\"Invalid_Import_File_Type\":\"Tip fișier de date invalid.\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ru\"] = [\"Russian\",\"Русский\"];\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"Importer_Archived\":\"Удаленные\",\"Importer_done\":\"Импорт данных завершен!\",\"Importer_finishing\":\"Завершить импорт данных.\",\"Importer_From_Description\":\"Импортировать данные из __from__ в Rocket.Chat.\",\"Importer_import_cancelled\":\"Импорт данных отменен.\",\"Importer_import_failed\":\"Во время импорта данных возникла ошибка.\",\"Importer_importing_channels\":\"Импортировать каналы.\",\"Importer_importing_messages\":\"Импортировать сообщения.\",\"Importer_importing_started\":\"Начать импорт данных.\",\"Importer_importing_users\":\"Импортировать пользователей.\",\"Importer_not_defined_properly\":\"Импортер не был определен правильно, не хватает классификации импорта.\",\"Importer_not_in_progress\":\"Импортер на данный момент не в сети.\",\"Importer_Prepare_Restart_Import\":\"Перезапустить импорт данных.\",\"Importer_Prepare_Start_Import\":\"Начать импорт данных.\",\"Importer_Prepare_Uncheck_Archived_Channels\":\"Снимите флажок с удаленных каналов\",\"Importer_Prepare_Uncheck_Deleted_Users\":\"Снимите флажок с удаленных пользователей\",\"Importer_progress_error\":\"Произошла ошибка при выполнении импорта данных.\",\"Importer_setup_error\":\"При настройке импортера возникла ошибка.\",\"Invalid_Export_File\":\"Загруженный файл не является действительным экспортным файлом %s.\",\"Invalid_Import_File_Type\":\"Недействительный тип импортируемого файла.\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"sv\"] = [\"Swedish\",\"Svenska\"];\nif(_.isUndefined(TAPi18n.translations[\"sv\"])) {\n  TAPi18n.translations[\"sv\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"sv\"][namespace])) {\n  TAPi18n.translations[\"sv\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"sv\"][namespace], {\"Importer_done\":\"Importering färdig!\",\"Importer_finishing\":\"Avslutar importen.\",\"Importer_import_cancelled\":\"Importering avbryten.\",\"Importer_import_failed\":\"Ett fel uppstod under importen.\",\"Importer_importing_channels\":\"Importerar kanalerna.\",\"Importer_importing_messages\":\"Importerar meddelandena.\",\"Importer_importing_started\":\"Startar importen.\",\"Importer_importing_users\":\"Importerar användarna.\",\"Importer_Prepare_Restart_Import\":\"Starta om import\",\"Importer_Prepare_Start_Import\":\"Börja importera\"});\nTAPi18n._registerServerTranslator(\"sv\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"zh\"] = [\"Chinese\",\"中文\"];\nif(_.isUndefined(TAPi18n.translations[\"zh\"])) {\n  TAPi18n.translations[\"zh\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh\"][namespace])) {\n  TAPi18n.translations[\"zh\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh\"][namespace], {\"Importer_Archived\":\"已归档\",\"Importer_done\":\"已完成导入！\",\"Importer_finishing\":\"导入即将完成。\",\"Importer_From_Description\":\"将 __from__ 数据导入 Rocket.Chat。\",\"Importer_import_cancelled\":\"已取消导入\",\"Importer_import_failed\":\"导入过程中发生错误！\",\"Importer_importing_channels\":\"导入频道。\",\"Importer_importing_messages\":\"倒入信息。\",\"Importer_importing_started\":\"开始导入。\",\"Importer_importing_users\":\"导入用户。\",\"Importer_not_defined_properly\":\"导入所用帐号错误，未指定导入class。\",\"Importer_not_in_progress\":\"导入工具没有正常运行。\",\"Importer_Prepare_Restart_Import\":\"重新导入\",\"Importer_Prepare_Start_Import\":\"开始导入\",\"Importer_Prepare_Uncheck_Archived_Channels\":\"取消选中已归档的频道\",\"Importer_Prepare_Uncheck_Deleted_Users\":\"取消选中已删除的用户\",\"Importer_setup_error\":\"设置导入工具时发生了错误。\",\"Invalid_Export_File\":\"上传的文件不是有效的导出文件。\",\"Invalid_Import_File_Type\":\"无效的导入文件类型。\"});\nTAPi18n._registerServerTranslator(\"zh\", namespace);\n"]}