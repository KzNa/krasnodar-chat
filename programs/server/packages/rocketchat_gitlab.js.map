{"version":3,"sources":["meteor://üíªapp/packages/rocketchat_gitlab/common.coffee","meteor://üíªapp/packages/rocketchat_gitlab/startup.coffee","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/de.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/en.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/es.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/fi.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/fr.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/hr.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/ja.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/km.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/ko.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/nl.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/pl.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/pt.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/ro.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/ru.i18n.json","meteor://üíªapp/packages/rocketchat_gitlab/packages/rocketchat_gitlabi18n/zh.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SACC;AAAA,aAAW,oBAAX;AAAA,EACA,cAAc,cADd;AAAA,EAEA,sBACC;AAAA,qBAAiB,CAAC,iBAAD,CAAjB;AAAA,IACA,eAAe,CAAC,0BAAD,CADf;GAHD;CADD;;AAAA,MAOA,GAAa,gBAAY,QAAZ,EAAsB,MAAtB,CAPb;;AASA,IAAG,MAAM,CAAC,QAAV;AACC,QAAM,CAAC,OAAP,CAAe;WACd,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,QAA3B,CAAoC,gBAApC,CAAqD,CAAC,OAAtD,CACC;AAAA,aAAO,SAAC,MAAD;AACN,cAAM,CAAC,SAAP,GAAmB,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,gBAAxB,CAAnB;eACA,MAAM,CAAC,SAAP,CAAiB,MAAjB,EAFM;MAAA,CAAP;AAAA,MAGA,SAAS,SAAC,MAAD;AACR,cAAM,CAAC,SAAP,GAAmB,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,gBAAxB,CAAnB;eACA,MAAM,CAAC,SAAP,CAAiB,MAAjB,EAFQ;MAAA,CAHT;KADD,EADc;EAAA,CAAf,EADD;CAAA;AAUC,QAAM,CAAC,OAAP,CAAe;WACd,OAAO,CAAC,OAAR,CAAgB;AACf,UAAG,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,gBAAxB,CAAH;AACC,cAAM,CAAC,SAAP,GAAmB,UAAU,CAAC,QAAQ,CAAC,GAApB,CAAwB,gBAAxB,CAAnB;eACA,MAAM,CAAC,SAAP,CAAiB,MAAjB,EAFD;OADe;IAAA,CAAhB,EADc;EAAA,CAAf,EAVD;CATA;;;;;;;;;;;;;;;;;;;;ACAA,UAAU,CAAC,QAAQ,CAAC,QAApB,CAA6B,OAA7B,EAAsC;SACrC,IAAC,QAAD,CAAS,QAAT,EAAmB;AAClB;AAAA,kBAAc;AAAA,MAAC,KAAK,uBAAN;AAAA,MAA+B,OAAO,IAAtC;KAAd;AAAA,IACA,IAAC,IAAD,CAAK,uBAAL,EAA8B,KAA9B,EAAqC;AAAA,MAAE,MAAM,SAAR;AAAA,MAAmB,UAAQ,IAA3B;KAArC,CADA;AAAA,IAEA,IAAC,IAAD,CAAK,gBAAL,EAAuB,EAAvB,EAA2B;AAAA,MAAE,MAAM,QAAR;AAAA,MAAkB,aAAa,WAA/B;AAAA,MAA4C,UAAQ,IAApD;KAA3B,CAFA;AAAA,IAGA,IAAC,IAAD,CAAK,0BAAL,EAAiC,EAAjC,EAAqC;AAAA,MAAE,MAAM,QAAR;AAAA,MAAkB,aAAa,WAA/B;KAArC,CAHA;AAAA,IAIA,IAAC,IAAD,CAAK,8BAAL,EAAqC,EAArC,EAAyC;AAAA,MAAE,MAAM,QAAR;AAAA,MAAkB,aAAa,WAA/B;KAAzC,CAJA;WAKA,IAAC,IAAD,CAAK,oCAAL,EAA2C,eAA3C,EAA4D;AAAA,MAAE,MAAM,aAAR;AAAA,MAAuB,UAAU,IAAjC;AAAA,MAAuC,OAAO,IAA9C;AAAA,MAAoD,aAAa,WAAjE;KAA5D,EANkB;EAAA,CAAnB,EADqC;AAAA,CAAtC;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F","file":"/packages/rocketchat_gitlab.js","sourcesContent":["config =\n\tserverURL: 'https://gitlab.com'\n\tidentityPath: '/api/v3/user'\n\taddAutopublishFields:\n\t\tforLoggedInUser: ['services.gitlab']\n\t\tforOtherUsers: ['services.gitlab.username']\n\nGitlab = new CustomOAuth 'gitlab', config\n\nif Meteor.isServer\n\tMeteor.startup ->\n\t\tRocketChat.models.Settings.findById('API_Gitlab_URL').observe\n\t\t\tadded: (record) ->\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Gitlab_URL'\n\t\t\t\tGitlab.configure config\n\t\t\tchanged: (record) ->\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Gitlab_URL'\n\t\t\t\tGitlab.configure config\nelse\n\tMeteor.startup ->\n\t\tTracker.autorun ->\n\t\t\tif RocketChat.settings.get 'API_Gitlab_URL'\n\t\t\t\tconfig.serverURL = RocketChat.settings.get 'API_Gitlab_URL'\n\t\t\t\tGitlab.configure config\n","RocketChat.settings.addGroup 'OAuth', ->\n\t@section 'GitLab', ->\n\t\tenableQuery = {_id: 'Accounts_OAuth_Gitlab', value: true}\n\t\t@add 'Accounts_OAuth_Gitlab', false, { type: 'boolean', public: true }\n\t\t@add 'API_Gitlab_URL', '', { type: 'string', enableQuery: enableQuery, public: true}\n\t\t@add 'Accounts_OAuth_Gitlab_id', '', { type: 'string', enableQuery: enableQuery }\n\t\t@add 'Accounts_OAuth_Gitlab_secret', '', { type: 'string', enableQuery: enableQuery }\n\t\t@add 'Accounts_OAuth_Gitlab_callback_url', '_oauth/gitlab', { type: 'relativeUrl', readonly: true, force: true, enableQuery: enableQuery }\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"de\"] = [\"German\",\"Deutsch\"];\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"API_Gitlab_URL\":\"GitLab-URL\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"API_Gitlab_URL\":\"GitLab URL\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"es\"] = [\"Spanish (Spain)\",\"Espa√±ol\"];\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"API_Gitlab_URL\":\"URL de GitLab\"});\nTAPi18n._registerServerTranslator(\"es\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fi\"] = [\"Finnish\",\"Suomi\"];\nif(_.isUndefined(TAPi18n.translations[\"fi\"])) {\n  TAPi18n.translations[\"fi\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fi\"][namespace])) {\n  TAPi18n.translations[\"fi\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fi\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"fi\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Fran√ßais\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"hr\"] = [\"Croatian\",\"Hrvatski\"];\nif(_.isUndefined(TAPi18n.translations[\"hr\"])) {\n  TAPi18n.translations[\"hr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"hr\"][namespace])) {\n  TAPi18n.translations[\"hr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"hr\"][namespace], {\"API_Gitlab_URL\":\"GitLab link\"});\nTAPi18n._registerServerTranslator(\"hr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ja\"] = [\"Japanese\",\"Êó•Êú¨Ë™û\"];\nif(_.isUndefined(TAPi18n.translations[\"ja\"])) {\n  TAPi18n.translations[\"ja\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ja\"][namespace])) {\n  TAPi18n.translations[\"ja\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ja\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"ja\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"km\"] = [\"Khmer\",\"·ûó·û∂·ûü·û∂·ûÅ·üí·ûò·üÇ·ûö\"];\nif(_.isUndefined(TAPi18n.translations[\"km\"])) {\n  TAPi18n.translations[\"km\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"km\"][namespace])) {\n  TAPi18n.translations[\"km\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"km\"][namespace], {\"API_Gitlab_URL\":\"URL ·ûö·ûî·ûü·üã GitLab\"});\nTAPi18n._registerServerTranslator(\"km\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ko\"] = [\"Korean\",\"ÌïúÍµ≠Ïñ¥\"];\nif(_.isUndefined(TAPi18n.translations[\"ko\"])) {\n  TAPi18n.translations[\"ko\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ko\"][namespace])) {\n  TAPi18n.translations[\"ko\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ko\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"ko\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"nl\"] = [\"Dutch\",\"Nederlands\"];\nif(_.isUndefined(TAPi18n.translations[\"nl\"])) {\n  TAPi18n.translations[\"nl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"nl\"][namespace])) {\n  TAPi18n.translations[\"nl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"nl\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"nl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"pl\"] = [\"Polish\",\"Polski\"];\nif(_.isUndefined(TAPi18n.translations[\"pl\"])) {\n  TAPi18n.translations[\"pl\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pl\"][namespace])) {\n  TAPi18n.translations[\"pl\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pl\"][namespace], {\"API_Gitlab_URL\":\"Adres GitLab\"});\nTAPi18n._registerServerTranslator(\"pl\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"pt\"] = [\"Portuguese (Portugal)\",\"Portugu√™s\"];\nif(_.isUndefined(TAPi18n.translations[\"pt\"])) {\n  TAPi18n.translations[\"pt\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"pt\"][namespace])) {\n  TAPi18n.translations[\"pt\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"pt\"][namespace], {\"API_Gitlab_URL\":\"URL do GitLab\"});\nTAPi18n._registerServerTranslator(\"pt\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ro\"] = [\"Romanian\",\"Rom√¢nƒÉ\"];\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ru\"] = [\"Russian\",\"–†—É—Å—Å–∫–∏–π\"];\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"zh\"] = [\"Chinese\",\"‰∏≠Êñá\"];\nif(_.isUndefined(TAPi18n.translations[\"zh\"])) {\n  TAPi18n.translations[\"zh\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh\"][namespace])) {\n  TAPi18n.translations[\"zh\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh\"][namespace], {\"API_Gitlab_URL\":\"GitLab URL\"});\nTAPi18n._registerServerTranslator(\"zh\", namespace);\n"]}