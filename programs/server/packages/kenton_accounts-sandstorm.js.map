{"version":3,"sources":["meteor://ðŸ’»app/packages/kenton_accounts-sandstorm/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sF","file":"/packages/kenton_accounts-sandstorm.js","sourcesContent":["// Copyright (c) 2014 Sandstorm Development Group, Inc. and contributors\n// Licensed under the MIT License:\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nWebApp.rawConnectHandlers.use(function (req, res, next) {\n  if (req.url === \"/.sandstorm-credentials\") {\n    handleCredentials(req, res);\n    return;\n  }\n  return next();\n});\n\nvar handleCredentials = Meteor.bindEnvironment(function (req, res) {\n  try {\n    var permissions = req.headers[\"x-sandstorm-permissions\"];\n    if (permissions && permissions !== \"\") {\n      permissions = permissions.split(\",\");\n    } else {\n      permissions = [];\n    }\n\n    var credentials = {\n      sandstormId: req.headers[\"x-sandstorm-user-id\"] || null,\n      name: decodeURI(req.headers[\"x-sandstorm-username\"]),\n      permissions: permissions,\n      picture: req.headers[\"x-sandstorm-user-picture\"] || null,\n      preferredHandle: req.headers[\"x-sandstorm-preferred-handle\"] || null,\n      pronouns: req.headers[\"x-sandstorm-user-pronouns\"] || null\n    };\n\n    if (credentials.sandstormId) {\n      var login = Accounts.updateOrCreateUserFromExternalService(\n          \"sandstorm\", {\n            id: credentials.sandstormId,\n            name: credentials.name,\n            permissions: permissions,\n            picture: credentials.picture,\n            preferredHandle: credentials.preferredHandle,\n            pronouns: credentials.pronouns\n          }, { profile: { name: credentials.name } });\n      console.log(login);\n      credentials.meteorId = login.userId;\n      var token = Accounts._generateStampedLoginToken();\n      credentials.token = token.token;\n      Accounts._insertLoginToken(login.userId, token);\n    }\n\n    var body = new Buffer(JSON.stringify(credentials));\n\n    res.writeHead(200, {\n      \"Content-Type\": \"application/json\",\n      \"Content-Length\": body.length\n    });\n    res.end(body);\n  } catch (err) {\n    res.writeHead(500, {\n      \"Content-Type\": \"text/plain\"\n    });\n    res.end(err.stack);\n  }\n});\n"]}