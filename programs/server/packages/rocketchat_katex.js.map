{"version":3,"sources":["meteor://💻app/packages/rocketchat_katex/settings.coffee","meteor://💻app/packages/rocketchat_katex/katex.coffee","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/de.i18n.json","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/en.i18n.json","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/fr.i18n.json","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/ja.i18n.json","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/ro.i18n.json","meteor://💻app/packages/rocketchat_katex/packages/rocketchat_katexi18n/ru.i18n.json"],"names":[],"mappings":"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CAAC,GAArB,CAAyB,eAAzB,EAA0C,EAA1C,CAjJA;;AAmJA,IAAG,MAAM,CAAC,QAAV;AACC,OAAK,CAAC,cAAN,CAAqB,iBAArB,EAAwC,SAAC,IAAD;AACvC,WAAO,UAAU,CAAC,KAAK,CAAC,cAAjB,CAAgC,IAAhC,CAAP,CADuC;EAAA,CAAxC,EADD;CAnJA;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wG","file":"/packages/rocketchat_katex.js","sourcesContent":["Meteor.startup ->\n  RocketChat.settings.add 'Katex_Enabled', false, {type: 'boolean', group: 'Message', section: 'Katex', public: true, i18nLabel: 'Katex_Enabled'}\n","###\n# KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.\n# https://github.com/Khan/KaTeX\n###\n\nclass Katex\n\tdelimiters_map: {\n\t\t'\\\\[': { closer: '\\\\]', displayMode: true  },\n\t\t'\\\\(': { closer: '\\\\)', displayMode: false },\n\n\t\t# Conflicts with message tokens syntax: $token$\n\t\t#'$$' : { closer: '$$' , displayMode: true  },\n\t\t#'$'  : { closer: '$'  , displayMode: false },\n\t}\n\n\t# Searches for the first opening delimiter in the string\n\tfind_opening_delimiter: (str) ->\n\t\t# Search the string for each opening delimiter\n\t\tmatches = ({options: o, pos: str.indexOf(b)} for b,o of @delimiters_map)\n\t\tpositions = (b.pos for b in matches when b.pos >= 0)\n\n\t\t# No opening delimiters were found\n\t\tif positions.length == 0\n\t\t\treturn null\n\n\t\t# Take the first delimiter found\n\t\tpos = Math.min.apply Math, positions\n\n\t\tmatch_index = (b.pos for b in matches).indexOf(pos)\n\t\tmatch = matches[match_index]\n\n\t\treturn match\n\n\tclass Boundary\n\t\tlength: () ->\n\t\t\treturn @end - @start\n\n\t# Returns the outer and inner boundaries of the latex block starting\n\t# at the given opening delimiter\n\tget_latex_boundaries: (str, opening_delimiter_match) ->\n\t\tinner = new Boundary\n\t\touter = new Boundary\n\n\t\t# The closing delimiter matching to the opening one\n\t\tcloser = opening_delimiter_match.options.closer\n\n\t\touter.start = opening_delimiter_match.pos\n\t\tinner.start = opening_delimiter_match.pos + closer.length\n\n\t\t# Search for a closer delimiter after the opening one\n\t\tcloser_index = str.substr(inner.start).indexOf(closer)\n\t\tif closer_index < 0\n\t\t\treturn null\n\n\t\tinner.end = inner.start + closer_index\n\t\touter.end = inner.end + closer.length\n\n\t\treturn {\n\t\t\touter: outer\n\t\t\tinner: inner\n\t\t}\n\n\t# Searches for the first latex block in the given string\n\tfind_latex: (str) ->\n\t\tunless str.length and (opening_delimiter_match = @find_opening_delimiter str)?\n\t\t\treturn null\n\t\t\n\t\tmatch = @get_latex_boundaries str, opening_delimiter_match\n\n\t\tmatch?.options = opening_delimiter_match.options\n\n\t\treturn match\n\n\t# Breaks a message to what comes before, after and to the content of a\n\t# matched latex block\n\textract_latex: (str, match) ->\n\t\tbefore = str.substr 0, match.outer.start\n\t\tafter  = str.substr match.outer.end\n\n\t\tlatex = str.substr match.inner.start, match.inner.length()\n\t\tlatex = s.unescapeHTML latex\n\n\t\treturn { before: before, latex : latex, after : after } \n\n\t# Takes a latex math string and the desired display mode and renders it\n\t# to HTML using the KaTeX library\n\trender_latex: (latex, displayMode) ->\n\t\ttry\n\t\t\trendered = katex.renderToString latex , {displayMode: displayMode}\n\t\tcatch e\n\t\t\tdisplay_mode = if displayMode then \"block\" else \"inline\"\n\t\t\trendered =  \"<div class=\\\"katex-error katex-#{display_mode}-error\\\">\"\n\t\t\trendered += \t\"#{e.message}\"\n\t\t\trendered += \"</div>\"\n\t\t\n\t\treturn rendered\n\n\t# Takes a string and renders all latex blocks inside it\n\trender: (str) ->\n\t\tresult = ''\n\n\t\twhile true\n\n\t\t\t# Find the first latex block in the string\n\t\t\tmatch = @find_latex str\n\t\t\tunless match?\n\t\t\t\tresult += str\n\t\t\t\tbreak\n\n\t\t\tparts = @extract_latex str, match\n\n\t\t\t# Add to the reuslt what comes before the latex block as well as\n\t\t\t# the rendered latex content\n\t\t\trendered = @render_latex parts.latex, match.options.displayMode\n\t\t\tresult += parts.before + rendered\n\t\t\t\n\t\t\t# Set what comes after the latex block to be examined next\n\t\t\tstr = parts.after\n\n\t\treturn result\n\n\t# Takes a rocketchat message and renders latex in its content\n\trender_message: (message) ->\n\t\t# Render only if enabled in admin panel\n\t\tif RocketChat.settings.get('Katex_Enabled')\n\t\t\tmsg = message\n\n\t\t\tif not _.isString message\n\t\t\t\tif _.trim message.html\n\t\t\t\t\tmsg = message.html\n\t\t\t\telse\n\t\t\t\t\treturn message\n\n\t\t\tmsg = @render msg\n\n\t\t\tif not _.isString message\n\t\t\t\tmessage.html = msg\n\t\t\telse\n\t\t\t\tmessage = msg\n\n\t\treturn message\n\nRocketChat.katex = new Katex\n\ncb = RocketChat.katex.render_message.bind(RocketChat.katex)\nRocketChat.callbacks.add 'renderMessage', cb\n\nif Meteor.isClient\n\tBlaze.registerHelper 'RocketChatKatex', (text) ->\n\t\treturn RocketChat.katex.render_message text\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"de\"] = [\"German\",\"Deutsch\"];\nTAPi18n._enable({\"helper_name\":\"_\",\"supported_languages\":null,\"i18n_files_route\":\"/tap-i18n\",\"preloaded_langs\":[],\"cdn_path\":null});\nTAPi18n.languages_names[\"en\"] = [\"English\",\"English\"];\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"Katex_Enabled\":\"Katex ist aktiviert.\"});\nTAPi18n._registerServerTranslator(\"de\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \ntranslations = {};\ntranslations[namespace] = {\"Katex_Enabled\":\"Katex Enabled\"};\nTAPi18n._loadLangFileObject(\"en\", translations);\nTAPi18n._registerServerTranslator(\"en\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"fr\"] = [\"French (France)\",\"Français\"];\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"Katex_Enabled\":\"Katex activé\"});\nTAPi18n._registerServerTranslator(\"fr\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ja\"] = [\"Japanese\",\"日本語\"];\nif(_.isUndefined(TAPi18n.translations[\"ja\"])) {\n  TAPi18n.translations[\"ja\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ja\"][namespace])) {\n  TAPi18n.translations[\"ja\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ja\"][namespace], {\"Katex_Enabled\":\"Katex を有効にする\"});\nTAPi18n._registerServerTranslator(\"ja\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ro\"] = [\"Romanian\",\"Română\"];\nif(_.isUndefined(TAPi18n.translations[\"ro\"])) {\n  TAPi18n.translations[\"ro\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ro\"][namespace])) {\n  TAPi18n.translations[\"ro\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ro\"][namespace], {\"Katex_Enabled\":\"Katex activat\"});\nTAPi18n._registerServerTranslator(\"ro\", namespace);\n","var _ = Package.underscore._,\n    package_name = \"project\",\n    namespace = \"project\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nTAPi18n.languages_names[\"ru\"] = [\"Russian\",\"Русский\"];\nif(_.isUndefined(TAPi18n.translations[\"ru\"])) {\n  TAPi18n.translations[\"ru\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"ru\"][namespace])) {\n  TAPi18n.translations[\"ru\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"ru\"][namespace], {\"Katex_Enabled\":\"Katex включен\"});\nTAPi18n._registerServerTranslator(\"ru\", namespace);\n"]}