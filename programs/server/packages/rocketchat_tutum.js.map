{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_tutum/startup.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;GAAA;AAAA;;AAOA,IAAG,0CAAH;AACC,UAAQ,GAAG,CAAC,OAAJ,CAAY,OAAZ,CAAR;AAAA,EAEA,SAAS,KAAK,CAAC,YAAN,CAAmB,OAAO,CAAC,GAAG,CAAC,sBAA/B,CAFT;AAAA,EAIA,MAAM,CAAC,GAAP,CAAW,cAAY,OAAO,CAAC,GAAG,CAAC,uBAAnC,CAJA;AAAA,EAKA,MAAM,CAAC,KAAP,CAAa,cAAY,OAAO,CAAC,GAAG,CAAC,uBAArC,EAAgE,OAAO,CAAC,GAAG,CAAC,uBAA5E,CALA;AAAA,EAMA,MAAM,CAAC,KAAP,CAAa,cAAY,OAAO,CAAC,GAAG,CAAC,uBAArC,EAAgE,YAAS,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,KAAnC,CAAyC,GAAzC,CAA8C,GAA/C,CAAT,GAA2D,OAA3H,CANA;AAAA,EASA,OAAO,CAAC,EAAR,CAAW,SAAX,EAAsB;WACrB,MAAM,CAAC,MAAP,CAAc,cAAY,OAAO,CAAC,GAAG,CAAC,uBAAtC,EAAiE,EAAjE,EADqB;EAAA,CAAtB,CATA;AAAA,EAYA,MAAM,QAZN;AAAA,EAcA,eAAe,EAdf;AAgBA,MAAG,MAAI,CAAM,SAAS,OAAO,CAAC,GAAG,CAAC,+BAArB,CAAN,CAAP;AACC,mBAAe,SAAS,OAAO,CAAC,GAAG,CAAC,+BAArB,CAAf,CADD;GAhBA;AAAA,EAmBA,yBAAyB;AACxB;AAAA,mBAAe,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,OAAhC,CAAwC;AAAA,MAAC,IAAI;AAAA,QAAC,SAAS,IAAV;OAAL;KAAxC,EAA+D;AAAA,MAAC,MAAM;AAAA,QAAC,IAAI,EAAL;OAAP;AAAA,MAAiB,QAAQ;AAAA,QAAC,IAAI,CAAL;OAAzB;KAA/D,CAAf;AAEA,QAAO,sBAAJ,IAAqB,IAAI,CAAC,GAAL,KAAa,YAAY,CAAC,EAA1B,GAA+B,eAAe,GAAtE;AACC,YAAM,CAAC,GAAP,CAAW,cAAY,OAAO,CAAC,GAAG,CAAC,uBAAnC;aACA,OAAO,CAAC,IAAR,CAAa,CAAb,EAFD;KAHwB;EAAA,CAnBzB;AAAA,EA0BA,MAAM,CAAC,WAAP,CAAmB;AAClB;AAAA,UAAU,UAAV;AACA,QAAG,GAAG,CAAC,QAAJ,OAAkB,CAAlB,IAAwB,GAAG,CAAC,UAAJ,OAAoB,CAA/C;aACC,yBADD;KAFkB;EAAA,CAAnB,EAIE,KAJF,CA1BA,CADD;CAPA","file":"/packages/rocketchat_tutum.js","sourcesContent":["### Examples\n\nDOCKERCLOUD_REDIS_HOST=redis://:password@host:6379\nDOCKERCLOUD_CLIENT_NAME=mywebsite\nDOCKERCLOUD_CLIENT_HOST=mywebsite.dotcloud.com\n###\n\nif process.env.DOCKERCLOUD_REDIS_HOST?\n\tredis = Npm.require 'redis'\n\n\tclient = redis.createClient(process.env.DOCKERCLOUD_REDIS_HOST)\n\n\tclient.del(\"frontend:#{process.env.DOCKERCLOUD_CLIENT_HOST}\")\n\tclient.rpush(\"frontend:#{process.env.DOCKERCLOUD_CLIENT_HOST}\", process.env.DOCKERCLOUD_CLIENT_NAME)\n\tclient.rpush(\"frontend:#{process.env.DOCKERCLOUD_CLIENT_HOST}\", \"http://#{process.env.DOCKERCLOUD_IP_ADDRESS.split('/')[0]}:3000\")\n\n\t# removes the redis entry in 90 seconds on a SIGTERM\n\tprocess.on 'SIGTERM', ->\n\t\tclient.expire(\"frontend:#{process.env.DOCKERCLOUD_CLIENT_HOST}\", 90)\n\n\tday = 86400000\n\n\tinactiveDays = 30\n\n\tif not isNaN(parseInt(process.env.DOCKERCLOUD_REDIS_INACTIVE_DAYS))\n\t\tinactiveDays = parseInt(process.env.DOCKERCLOUD_REDIS_INACTIVE_DAYS)\n\n\tterminateAppIfInactive = ->\n\t\tsubscription = RocketChat.models.Subscriptions.findOne({ls: {$exists: true}}, {sort: {ls: -1}, fields: {ls: 1}})\n\n\t\tif not subscription? or Date.now() - subscription.ls > inactiveDays * day\n\t\t\tclient.del(\"frontend:#{process.env.DOCKERCLOUD_CLIENT_HOST}\")\n\t\t\tprocess.exit 0\n\n\tMeteor.setInterval ->\n\t\tnow = new Date()\n\t\tif now.getHours() is 4 and now.getMinutes() is 0\n\t\t\tterminateAppIfInactive()\n\t, 60000\n"]}