{"version":3,"sources":["meteor://ðŸ’»app/server/methods/messageSearch.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,CAAC,OAAP,CACC;AAAA,iBAAe,SAAC,IAAD,EAAO,GAAP,EAAY,KAAZ;AACd;AAAA;;OAAA;AAAA;AAAA,IAIA,SACC;AAAA,gBAAU,EAAV;AAAA,MACA,OAAO,EADP;AAAA,MAEA,UAAU,EAFV;KALD;AAAA,IASA,QAAQ,EATR;AAAA,IAUA,UACC;AAAA,YACC;AAAA,YAAI,EAAJ;OADD;AAAA,MAEA,OAAO,SAAS,EAFhB;KAXD;AAAA,IAgBA,OAAO,EAhBP;AAAA,IAiBA,OAAO,IAAI,CAAC,OAAL,CAAa,uBAAb,EAAsC,SAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB;AAC5C,UAAI,CAAC,IAAL,CAAU,QAAV;AACA,aAAO,EAAP,CAF4C;IAAA,CAAtC,CAjBP;AAqBA,QAAG,IAAI,CAAC,MAAL,GAAc,CAAjB;AACC,WAAM,cAAN,GACC;AAAA,gBAAQ,IAAI,CAAC,IAAL,CAAU,GAAV,CAAR;AAAA,QACA,UAAU,GADV;OADD,CADD;KArBA;AAAA,IA4BA,UAAU,EA5BV;AAAA,IA6BA,OAAO,IAAI,CAAC,OAAL,CAAa,0BAAb,EAAyC,SAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB;AAC/C,aAAO,CAAC,IAAR,CAAa,QAAb;AACA,aAAO,EAAP,CAF+C;IAAA,CAAzC,CA7BP;AAiCA,QAAG,OAAO,CAAC,MAAR,GAAiB,CAApB;AACC,WAAM,qBAAN,GACC;AAAA,gBAAQ,OAAO,CAAC,IAAR,CAAa,GAAb,CAAR;AAAA,QACA,UAAU,GADV;OADD,CADD;KAjCA;AAAA,IAwCA,OAAO,IAAI,CAAC,IAAL,EAAW,CAAC,OAAZ,CAAoB,OAApB,EAA6B,GAA7B,CAxCP;AAyCA,QAAG,SAAU,EAAb;AACC,WAAK,CAAC,KAAN,GACC;AAAA,iBAAS,IAAT;OADD;AAAA,MAGA,OAAO,CAAC,MAAR,GACC;AAAA,eACC;AAAA,iBAAO,WAAP;SADD;OAJD,CADD;KAzCA;AAqDA,QAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,CAAC,MAAnB,GAA4B,CAA/B;AACC,WAAK,CAAC,CAAN,GAAU;AAAA,QAAE,KAAK,IAAP;OAAV;AAAA,MACA,KAAK,CAAC,OAAN,GAAgB;AAAA,QAAE,KAAK,IAAP;OADhB;AAIA,UAAG,WAAH;AACC,aAAK,CAAC,GAAN,GAAY,GAAZ;AACA;AACC,cAAG,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,GAA7B,EAAkC,IAAI,CAAC,MAAvC,MAAoD,KAAvD;AACC,mBAAO,CAAC,GAAR,CAAY,KAAZ;AAAA,YACA,MAAM,CAAC,QAAP,GAAkB,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,IAA3B,CAAgC,KAAhC,EAAuC,OAAvC,CAA+C,CAAC,KAAhD,EADlB,CADD;WADD;SAAA,kBAFD;OALD;KArDA;AAiHA,WAAO,MAAP,CAlHc;EAAA,CAAf;CADD","file":"/server/methods/messageSearch.coffee.js","sourcesContent":["Meteor.methods\n\tmessageSearch: (text, rid, limit) ->\n\t\t###\n\t\t\ttext = 'from:rodrigo mention:gabriel chat'\n\t\t###\n\n\t\tresult =\n\t\t\tmessages: []\n\t\t\tusers: []\n\t\t\tchannels: []\n\n\t\tquery = {}\n\t\toptions =\n\t\t\tsort:\n\t\t\t\tts: -1\n\t\t\tlimit: limit or 20\n\n\t\t# Query for senders\n\t\tfrom = []\n\t\ttext = text.replace /from:([a-z0-9.-_]+)/ig, (match, username, index) ->\n\t\t\tfrom.push username\n\t\t\treturn ''\n\n\t\tif from.length > 0\n\t\t\tquery['u.username'] =\n\t\t\t\t$regex: from.join('|')\n\t\t\t\t$options: 'i'\n\n\n\t\t# Query for mentions\n\t\tmention = []\n\t\ttext = text.replace /mention:([a-z0-9.-_]+)/ig, (match, username, index) ->\n\t\t\tmention.push username\n\t\t\treturn ''\n\n\t\tif mention.length > 0\n\t\t\tquery['mentions.username'] =\n\t\t\t\t$regex: mention.join('|')\n\t\t\t\t$options: 'i'\n\n\n\t\t# Query in message text\n\t\ttext = text.trim().replace(/\\s\\s/g, ' ')\n\t\tif text isnt ''\n\t\t\tquery.$text =\n\t\t\t\t$search: text\n\n\t\t\toptions.fields =\n\t\t\t\tscore:\n\t\t\t\t\t$meta: \"textScore\"\n\n\t\t\t# options.sort =\n\t\t\t# \tscore:\n\t\t\t# \t\t$meta: 'textScore'\n\n\t\tif Object.keys(query).length > 0\n\t\t\tquery.t = { $ne: 'rm' } # hide removed messages (userful when searching for user messages)\n\t\t\tquery._hidden = { $ne: true } # don't return _hidden messages\n\n\t\t\t# Filter by room\n\t\t\tif rid?\n\t\t\t\tquery.rid = rid\n\t\t\t\ttry\n\t\t\t\t\tif Meteor.call('canAccessRoom', rid, this.userId) isnt false\n\t\t\t\t\t\tconsole.log query\n\t\t\t\t\t\tresult.messages = RocketChat.models.Messages.find(query, options).fetch()\n\n\n\t\t# make sure we don't return more than limit results\n\t\t# limit -= result.messages?.length\n\n\t\t# ###\n\t\t# # USERS\n\t\t# ###\n\t\t# if from.length is 0 and mention.length is 0 and text isnt ''\n\t\t# \tquery =\n\t\t# \t\tusername:\n\t\t# \t\t\t$regex: text\n\t\t# \t\t\t$options: 'i'\n\n\t\t# \toptions =\n\t\t# \t\tlimit: 5\n\t\t# \t\tsort:\n\t\t# \t\t\tusername: 1\n\t\t# \t\tfields:\n\t\t# \t\t\tusername: 1\n\t\t# \t\t\tname: 1\n\t\t# \t\t\tstatus: 1\n\t\t# \t\t\tutcOffset: 1\n\n\t\t# \tresult.users = Meteor.users.find(query, options).fetch()\n\n\n\t\t# ###\n\t\t# # CHANNELS\n\t\t# ###\n\t\t# if from.length is 0 and mention.length is 0 and text isnt ''\n\t\t# \tquery =\n\t\t# \t\tt: 'c'\n\t\t# \t\tname:\n\t\t# \t\t\t$regex: text\n\t\t# \t\t\t$options: 'i'\n\n\t\t# \toptions =\n\t\t# \t\tlimit: 5\n\t\t# \t\tsort:\n\t\t# \t\t\tname: 1\n\t\t# \t\tfields:\n\t\t# \t\t\tusername: 1\n\t\t# \t\t\tname: 1\n\t\t# \t\t\tstatus: 1\n\t\t# \t\t\tutcOffset: 1\n\n\t\t# \tresult.channels = ChatRoom.find(query, options).fetch()\n\n\t\treturn result\n"]}