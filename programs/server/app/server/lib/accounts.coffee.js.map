{"version":3,"sources":["meteor://ðŸ’»app/server/lib/accounts.coffee"],"names":[],"mappings":"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","file":"/server/lib/accounts.coffee.js","sourcesContent":["# Deny Account.createUser in client and set Meteor.loginTokenExpires\naccountsConfig = { forbidClientAccountCreation: true, loginExpirationInDays: RocketChat.settings.get 'Accounts_LoginExpiration' }\nAccounts.config accountsConfig\n\nRocketChat.settings.get 'Accounts_AllowedDomainsList', (_id, value) ->\n\tdomainWhiteList = _.map value.split(','), (domain) -> domain.trim()\n\trestrictCreationByEmailDomain = if domainWhiteList.length == 1 then domainWhiteList[0] else (email) ->\n\t\tret = false\n\t\tfor domain in domainWhiteList\n\t\t\tif email.match('@' + RegExp.escape(domain) + '$')\n\t\t\t\tret = true\n\t\t\t\tbreak;\n\n\t\treturn ret\n\tdelete Accounts._options['restrictCreationByEmailDomain']\n\n\tif not _.isEmpty value\n\t\tAccounts.config({ restrictCreationByEmailDomain: restrictCreationByEmailDomain });\n\nAccounts.emailTemplates.siteName = RocketChat.settings.get 'Site_Name';\nAccounts.emailTemplates.from = \"#{RocketChat.settings.get 'Site_Name'} <#{RocketChat.settings.get 'From_Email'}>\";\n\nverifyEmailText = Accounts.emailTemplates.verifyEmail.text\nAccounts.emailTemplates.verifyEmail.text = (user, url) ->\n\turl = url.replace Meteor.absoluteUrl(), Meteor.absoluteUrl() + 'login/'\n\tverifyEmailText user, url\n\nresetPasswordText = Accounts.emailTemplates.resetPassword.text\nAccounts.emailTemplates.resetPassword.text = (user, url) ->\n\turl = url.replace /\\/#\\//, '/'\n\tresetPasswordText user, url\n\nif RocketChat.settings.get 'Accounts_Enrollment_Email'\n\tAccounts.emailTemplates.enrollAccount.text = (user, url) ->\n\t\ttext = RocketChat.settings.get 'Accounts_Enrollment_Email'\n\n\t\ttext = text.replace /\\[name\\]/g, user.name or ''\n\t\ttext = text.replace /\\[fname\\]/g, _.strLeft(user.name, ' ') or  ''\n\t\ttext = text.replace /\\[lname\\]/g, _.strRightBack(user.name, ' ') or  ''\n\t\ttext = text.replace /\\[email\\]/g, user.emails?[0]?.address or ''\n\n\t\treturn text\n\nAccounts.onCreateUser (options, user) ->\n\t# console.log 'onCreateUser ->',JSON.stringify arguments, null, '  '\n\t# console.log 'options ->',JSON.stringify options, null, '  '\n\t# console.log 'user ->',JSON.stringify user, null, '  '\n\n\tRocketChat.callbacks.run 'beforeCreateUser', options, user\n\n\tuser.status = 'offline'\n\tuser.active = not RocketChat.settings.get 'Accounts_ManuallyApproveNewUsers'\n\n\tif not user?.name? or user.name is ''\n\t\tif options.profile?.name?\n\t\t\tuser.name = options.profile?.name\n\n\tif user.services?\n\t\tfor serviceName, service of user.services\n\t\t\tif not user?.name? or user.name is ''\n\t\t\t\tif service.name?\n\t\t\t\t\tuser.name = service.name\n\t\t\t\telse if service.username?\n\t\t\t\t\tuser.name = service.username\n\n\t\t\tif not user.emails? and service.email?\n\t\t\t\tuser.emails = [\n\t\t\t\t\taddress: service.email\n\t\t\t\t\tverified: true\n\t\t\t\t]\n\n\treturn user\n\n# Wrap insertUserDoc to allow executing code after Accounts.insertUserDoc is run\nAccounts.insertUserDoc = _.wrap Accounts.insertUserDoc, (insertUserDoc, options, user) ->\n\troles = []\n\tif Match.test(user.globalRoles, [String]) and user.globalRoles.length > 0\n\t\troles = roles.concat user.globalRoles\n\n\tdelete user.globalRoles\n\n\t_id = insertUserDoc.call(Accounts, options, user)\n\n\tif roles.length is 0\n\t\t# when inserting first user give them admin privileges otherwise make a regular user\n\t\thasAdmin = RocketChat.models.Users.findOne({ roles: 'admin' }, {fields: {_id: 1}})\n\t\tif hasAdmin?\n\t\t\troles.push 'user'\n\t\telse\n\t\t\troles.push 'admin'\n\n\tRocketChat.authz.addUserRoles(_id, roles)\n\n\tRocketChat.callbacks.run 'afterCreateUser', options, user\n\treturn _id\n\nAccounts.validateLoginAttempt (login) ->\n\tlogin = RocketChat.callbacks.run 'beforeValidateLogin', login\n\n\tif login.allowed isnt true\n\t\treturn login.allowed\n\n\tif !!login.user?.active isnt true\n\t\tthrow new Meteor.Error 'inactive-user', TAPi18n.__ 'User_is_not_activated'\n\t\treturn false\n\n\t# If user is admin, no need to check if e-mail is verified\n\tif 'admin' not in login.user?.roles and login.type is 'password' and RocketChat.settings.get('Accounts_EmailVerification') is true\n\t\tvalidEmail = login.user.emails.filter (email) ->\n\t\t\treturn email.verified is true\n\n\t\tif validEmail.length is 0\n\t\t\tthrow new Meteor.Error 'no-valid-email'\n\t\t\treturn false\n\n\tRocketChat.models.Users.updateLastLoginById login.user._id\n\n\tMeteor.defer ->\n\t\tRocketChat.callbacks.run 'afterValidateLogin', login\n\n\treturn true\n\nAccounts.validateNewUser (user) ->\n\tif RocketChat.settings.get('Accounts_Registration_AuthenticationServices_Enabled') is false and RocketChat.settings.get('LDAP_Enable') is false and not user.services?.password?\n\t\tthrow new Meteor.Error 'registration-disabled-authentication-services', 'User registration is disabled for authentication services'\n\treturn true\n"]}